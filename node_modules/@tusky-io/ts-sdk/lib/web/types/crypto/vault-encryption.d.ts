import { EncryptedVaultKeyPair } from "types";
import { Encrypter } from "./encrypter";
import { X25519EncryptedPayload } from "./types";
export declare class VaultEncryption {
    currentPublicKey: string;
    private vaultKeys;
    private userEncrypter?;
    constructor(config?: {
        vaultKeys?: EncryptedVaultKeyPair[];
        userEncrypter?: Encrypter;
    });
    generateAesKey(): Promise<AESKeyPayload>;
    decryptAesKey(encryptedAesKey: string): Promise<CryptoKey>;
    encryptHybrid(data: Uint8Array): Promise<string>;
    decryptHybrid(encryptedPayload: string): Promise<Uint8Array>;
    decryptVaultPrivateKey(encryptedPayload: X25519EncryptedPayload): Promise<Uint8Array>;
}
export type AESKeyPayload = {
    aesKey: CryptoKey;
    encryptedAesKey: X25519EncryptedPayload;
};
