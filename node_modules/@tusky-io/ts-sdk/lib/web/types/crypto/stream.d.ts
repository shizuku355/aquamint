import { ReadableStream } from "web-streams-polyfill/ponyfill";
export declare class DecryptStreamController {
    private key;
    private iv;
    private index;
    private file?;
    private files?;
    constructor(key: CryptoKey, index?: number, id?: string, files?: Map<any, any>);
    transform(chunk: Uint8Array, controller: any): Promise<void>;
}
export declare class StreamSlicer {
    private rs;
    private mode;
    private chunkSize;
    private partialChunk;
    private offset;
    constructor(rs: number, mode?: string);
    private send;
    transform(chunk: Uint8Array, controller: any): void;
    flush(controller: any): void;
}
export declare function transformStream(readable: ReadableStream<Uint8Array>, transformer: Transformer<Uint8Array, Uint8Array>, oncancel?: (reason: any) => void): ReadableStream<Uint8Array>;
