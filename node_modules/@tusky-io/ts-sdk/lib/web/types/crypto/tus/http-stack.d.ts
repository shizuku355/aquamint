import { Vault } from "../../types";
import * as tus from "tus-js-client";
import { Encrypter } from "../encrypter";
export declare const CONTENT_LENGTH_HEADER = "Content-Length";
export declare const UPLOAD_LENGTH_HEADER = "Upload-Length";
export declare const UPLOAD_OFFSET_HEADER = "Upload-Offset";
export declare const UPLOAD_METADATA_HEADER = "Upload-Metadata";
export declare const UPLOAD_METADATA_CHUNK_SIZE_KEY = "chunkSize";
export declare const UPLOAD_METADATA_NUMBER_OF_CHUNKS_KEY = "numberOfChunks";
export declare const UPLOAD_METADATA_ENCRYPTED_AES_KEY_KEY = "encryptedAesKey";
export declare const UPLOAD_METADATA_FILENAME_KEY = "filename";
export declare class EncryptableHttpStack {
    private defaultStack;
    private vault;
    private uploadAes;
    private vaultEncryption?;
    constructor(defaultStack: tus.HttpStack, vault: Vault, encrypter: Encrypter);
    createRequest(method: string, url: string): tus.HttpRequest;
    getName(): string;
    private putMetadata;
    private getMetadata;
}
