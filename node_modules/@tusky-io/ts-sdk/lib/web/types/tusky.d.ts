import { Api } from "./api/api";
import { ClientConfig, EncrypterConfig, TuskyConfig } from "./config";
import { FolderModule } from "./core/folder";
import { NFTModule } from "./core/nft";
import { VaultModule } from "./core/vault";
import { FileModule } from "./core/web/file";
import { ZipModule } from "./core/zip";
import { StorageModule } from "./core/storage";
import { Auth, AuthOptions } from "./auth";
import { MeModule } from "./core/me";
import { ApiKeyModule } from "./core/api-key";
import { TrashModule } from "./core/trash";
import PubSub from "./api/pubsub";
export declare class Tusky {
    api: Api;
    pubsub: PubSub;
    private _encrypter;
    private _env;
    private _storage;
    private _auth;
    get me(): MeModule;
    get folder(): FolderModule;
    get nft(): NFTModule;
    get vault(): VaultModule;
    get file(): FileModule;
    get zip(): ZipModule;
    get trash(): TrashModule;
    get apiKey(): ApiKeyModule;
    get storage(): StorageModule;
    get auth(): Auth;
    static init(config: TuskyConfig): Promise<Tusky>;
    signOut(): Promise<this>;
    addEncrypter(config: EncrypterConfig): Promise<this>;
    private getConfig;
    /**
     * @param  {ClientConfig} config
     */
    constructor(config?: ClientConfig & AuthOptions);
}
