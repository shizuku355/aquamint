import { LoggerConfig } from "./config";
export interface Logger {
    info(message: any, ...params: any[]): void;
    warn(message: any, ...params: any[]): void;
    error(message: any, ...params: any[]): void;
    debug(message: any, ...params: any[]): void;
}
export type LogLevel = "none" | "debug" | "info" | "warn" | "error";
export declare class ConsoleLogger implements Logger {
    private currentLogLevel;
    private _logToFile;
    private static logLevelMap;
    constructor(config: LoggerConfig);
    private shouldLog;
    private shouldLogToFile;
    private logToFile;
    info(message: any, ...params: any[]): void;
    warn(message: any, ...params: any[]): void;
    error(message: any, ...params: any[]): void;
    debug(message: any, ...params: any[]): void;
}
declare let logger: Logger;
export declare function setLogger(newLogger: Logger): void;
export { logger };
